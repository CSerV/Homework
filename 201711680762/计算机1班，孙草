{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#练习1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5.3\n",
      "Grace 你是一个善变的双子座。\n"
     ]
    }
   ],
   "source": [
    "name =\"Grace\"\n",
    "M=float(input())\n",
    "T=\"你是一个善变的双子座。\"\n",
    "if 5<M<6:\n",
    "    print(name,T)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#练习2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4\n",
      "8\n"
     ]
    }
   ],
   "source": [
    "m=8\n",
    "n=45\n",
    "A=m+n\n",
    "B=m*n\n",
    "C=m/n\n",
    "D=m%n\n",
    "E=int(input())\n",
    "if E==1:\n",
    "    print(A)\n",
    "elif E==2:\n",
    "    print(B)\n",
    "elif E==3:\n",
    "    print(C)\n",
    "else:\n",
    "    print(D)   #一次只能运行一个数据，不过都能运行"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#练习4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "teach\n",
      "teaches\n"
     ]
    }
   ],
   "source": [
    "n=input()\n",
    "if n==\"teach\"  or \"brush\" or \"go\": #这个需举例完全\n",
    "    print(n+\"es\")\n",
    "elif n==\"study\" or \"carry\":  #这个需举例完全\n",
    "    print(n[:-1]+\"ies\")\n",
    "else:\n",
    "    print(n+\"s\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#尝试性练习"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "\n"
     ]
    }
   ],
   "source": [
    "n=int(input())\n",
    "if n==1:\n",
    "    print( sep=\"         \")\n",
    "else:\n",
    "    print(\"程序错误\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
